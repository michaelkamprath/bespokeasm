description: Test Macro Creation
general :
  address_size: 16
  endian: little
  identifier:
    name: bespokeasm-test
    version: "0.2.0"
  registers:
    - a
    - i
    - j
    - sp
    - ij
    - mar
operand_sets:
  8_bit_source:
    operand_values:
      a:
        type: register
        register: a
        bytecode:
          value: 0
          size: 3
      i:
        type: register
        register: i
        bytecode:
          value: 2
          size: 3
      sp:
        type: indirect_register
        register: sp
        bytecode:
          value: 5
          size: 3
        offset:
          max: 127
          min: -128
          size: 8
          byte_align: true
      indirect_addr:
        type: indirect_numeric
        bytecode:
          value: 6
          size: 3
        argument:
          size: 16
          byte_align: true
      direct_value:
        type: numeric
        bytecode:
          value: 7
          size: 3
        argument:
          size: 8
          byte_align: true
  8_bit_destination:
    operand_values:
      a:
        type: register
        register: a
        bytecode:
          value: 0
          size: 3
      i:
        type: register
        register: i
        bytecode:
          value: 2
          size: 3
      mar:
        type: indirect_register
        register: mar
        bytecode:
          value: 4
          size: 3
      sp:
        type: indirect_register
        register: sp
        bytecode:
          value: 5
          size: 3
        offset:
          max: 127
          min: -128
          size: 8
          byte_align: true
      indirect_addr:
        type: indirect_numeric
        bytecode:
          value: 6
          size: 3
        argument:
          size: 16
          byte_align: true
  int8:
    operand_values:
      int8:
        type: numeric
        argument:
          size: 8
          byte_align: true
  int16:
    operand_values:
      int16:
        type: numeric
        argument:
          size: 16
          byte_align: true
instructions:
  push:
    operands:
      count: 1
      operand_sets:
        list:
          - 8_bit_source
    byte_code:
      value: 1
      size: 5
  mov:
    operands:
      count: 2
      operand_sets:
        list:
          - 8_bit_destination
          - 8_bit_source
    byte_code:
      value: 1
      size: 2
macros:
  push2:
    - operands:
        count: 1
        specific_operands:
          immediate:
            list:
              uint16:
                type: numeric
                argument:
                  size: 16
                  byte_align: true
      instructions:
        - "push ((@ARG(uint16)) >> 8)"
        - "push ((@ARG(uint16)) & 0x00FF)"
  mov2:
    - operands:
        count: 2
        specific_operands:
          iaddr1_iaddr2:
            list:
              iaddr1:
                type: indirect_numeric
                argument:
                  size: 16
                  byte_align: true
              iaddr2:
                type: indirect_numeric
                argument:
                  size: 16
                  byte_align: true
      instructions:
        - "mov [@ARG(iaddr1)],[@ARG(iaddr2)]"
        - "mov [@ARG(iaddr1) + 1],[@ARG(iaddr2) + 1]"